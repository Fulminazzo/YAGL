# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Tests

on:
  push:
    branches: [ "dev", "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Test and Build with Gradle Wrapper
        run: ./gradlew build

  update-pages:
    needs: test
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: write
      pages: write
      id-token: write
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    uses: ./.github/workflows/pages.yml

  jacoco:
    needs: test
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Setup Git
        run: |-
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        shell: bash

      - name: Delete badges Branch If Exists (Local)
        if: ${{ github.ref_name != 'badges' }}
        run: |-
          if [[ $(git branch | grep badges) ]]; then git branch -d badges; fi

      - name: Delete badges Branch If Exists (Remote)
        if: ${{ github.ref_name != 'badges' }}
        run: |-
          if [[ $(git ls-remote | grep badges) ]]; then git push origin --delete badges; fi

      - name: Checkout to badges Branch
        if: ${{ github.ref_name != 'badges' }}
        run: |-
          git checkout -b badges
        shell: bash

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Test with Gradle Wrapper
        run: ./gradlew testCodeCoverageReport

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.csv

      - name: Send Report to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.FULMINAZZO_CODACY_TOKEN }}
        run: |-
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
        shell: bash

      - name: Update and Push JaCoCo Badge
        run: |-
          git add .
          if [[ $(git commit -m "Update Jacoco badge") ]]; then git push origin badges; fi
        shell: bash
